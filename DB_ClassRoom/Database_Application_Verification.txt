学籍番号：G019C1137

氏　　名：中澤 雄太

--------------------------------------------------------------------------------
※カッコ表記について　【　】：テーブル名　『　』：列名　「　」：データ

問１【学科】テーブルを作成しなさい。
CREATE TABLE 学科 (
学科コード varchar(4) primary key,
学科名 varchar(24)
);

問２【学科】テーブルに、3件のデータを挿入しなさい。　
INSERT INTO 学科 VALUES('IS', 'ITスペシャリスト科');
INSERT INTO 学科 VALUES('C2', '情報処理科');
INSERT INTO 学科 VALUES('PN', 'パソコンネットワーク科');

問３【学生】テーブルに『7文字の郵便番号』を追加する。
ALTER TABLE 学生 ADD 7文字の郵便番号 varchar(7);

問４【科目】テーブルに『科目コード』「Z99」、『科目名』「社会」というレコードを追加する。
INSERT INTO 科目 VALUES('Z99', '社会');

問５【科目】テーブルの『科目コード』が「Z99」の『科目名』を「理科」に修正する。
UPDATE 科目 SET 科目名 = '理科' WHERE 科目コード = 'Z99';

問６【科目】テーブルの『科目コード』が「Z99」のレコードを削除する。
DELETE FROM 科目 WHERE 科目コード = 'Z99';

問７　以下のデータを抽出しなさい。

①【学科】テーブルのすべてを表示しなさい。
SELECT * FROM 学科;

②【学生】テーブルの『住所』のみを表示しなさい。ただし重複値は除くこと。
SELECT DISTINCT 住所 FROM 学生;

③【評価】テーブルの『点数』が80以上のすべての列を表示し、『点数』の低い順に並び替えなさい。
SELECT * FROM 評価 WHERE 点数 >= 80 ORDER BY 点数;

④【学生】テーブルの『住所』が「八王子」かつ『性別』が「男」の『学生名』『住所』『性別』を表示しなさい。
SELECT 学生名, 住所, 性別 FROM 学生
WHERE 住所 = '八王子'
AND 性別 = '男';

⑤【学生】テーブルの『学生名』に「田」が含まれる学生の『学籍番号』『学生名』を表示しなさい。
SELECT 学籍番号, 学生名 FROM 学生 WHERE 学生名 LIKE '%田%';

⑥【学生】テーブルの『住所』をグループ化し、住所ごとの件数を『件数』という別名で表示しなさい。
SELECT 住所, count(*) AS 件数 
FROM 学生 
GROUP BY 住所;

⑦【評価】テーブルの『学籍番号』ごとの平均点を求め、平均点が70以上を平均点の高い順に並び替え、『学籍番号』、平均点は『平均点』という別名で表示しなさい。
SELECT 学籍番号, avg(点数) AS 平均点 
FROM 評価 
GROUP BY 学籍番号;

⑧【評価】テーブルと【科目】テーブルを結合し、数学の点数が80以上の『学籍番号』『科目コード』『点数』を表示しなさい。
SELECT 評価.学籍番号, 評価.科目コード, 評価.点数  
FROM 評価 
INNER JOIN 科目 ON 評価.科目コード = 科目.科目コード
WHERE 科目名 = '数学' AND 点数 >= 80;

⑨【学生】テーブルと【学科】テーブルを結合し、学科が決まっていない学生を含む『学籍番号』『学生名』『学科名』を表示しなさい。
SELECT 学生.学籍番号, 学生.学生名, 学科.学科名
FROM 学生 LEFT OUTER JOIN 学科
ON 学生.学科コード = 学科.学科コード;

⑩『点数』が80以上の『学籍番号』『学生名』をサブクエリを使用して表示しなさい。
SELECT 学籍番号, 学生名
FROM 学生
WHERE 学籍番号 IN (SELECT 学籍番号 FROM 評価 WHERE 点数 >= 80);

問８ トランザクション処理のコマンドを答えなさい。 

① オートコミットを「OFF」にする。
SET AUTOCOMMIT=0;

② トランザクション処理の開始
START TRANSACTION;

③ 変更を確定する
COMMIT;

④ 変更の取り消し
ROLLBACK;


